<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>Theo&apos;s Personal Website</title><description>Theo&apos;s Personal Website</description><link>https://astro-modern-personal-website.netlify.app/</link><item><title>Understanding Solidity Part 3: Virtual Machine</title><link>https://astro-modern-personal-website.netlify.app/blog/understanding-solidity-part-3/</link><guid isPermaLink="true">https://astro-modern-personal-website.netlify.app/blog/understanding-solidity-part-3/</guid><description>In the previous part we&apos;ve written a Solidity grammar, or at least we&apos;ve written enough to parse our example contract. Today we&apos;ll go one step further and make it actually run by writing our own stack-based virtual machine.</description><pubDate>Mon, 10 Jul 2023 00:00:00 GMT</pubDate></item><item><title>Understanding Solidity Part 2: Parser and Grammar</title><link>https://astro-modern-personal-website.netlify.app/blog/understanding-solidity-part-2/</link><guid isPermaLink="true">https://astro-modern-personal-website.netlify.app/blog/understanding-solidity-part-2/</guid><description>This is the Part 2 of our tutorial series on how to build a Solidity parser and virtual machine in Rust ðŸ¦€. Now to the fun part, we&apos;re going to continue defining our grammar...</description><pubDate>Sat, 08 Jul 2023 00:00:00 GMT</pubDate></item><item><title>Understanding Solidity Part 1: Project Setup</title><link>https://astro-modern-personal-website.netlify.app/blog/understanding-solidity-part-1/</link><guid isPermaLink="true">https://astro-modern-personal-website.netlify.app/blog/understanding-solidity-part-1/</guid><description>The best way to understand something is to build it from scratch and we&apos;re about to do just that. You&apos;ll learn how Solidity works under the hood by building your very own Solidity parser and virtual machine in Rust ðŸ¦€.</description><pubDate>Thu, 06 Jul 2023 00:00:00 GMT</pubDate></item></channel></rss>